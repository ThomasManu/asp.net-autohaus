@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (User.IsInRole("Admin"))
        {
            <li class="nav-link">
                <a class="navbar-brand Adminbutton" asp-area="" asp-controller="Autobearbeitungs" asp-action="CreateEditAuto">neues Auto einpflegen</a>
            </li>
            <li class="nav-link">
                <a class="navbar-brand Adminbutton" asp-area="" asp-controller="Autobearbeitungs" asp-action="AutoIndex">alle Autos anzeigen</a>
            </li>
            <li class="nav-link">
                <a class="navbar-brand Adminbutton" asp-area="" asp-controller="Autobearbeitungs" asp-action="Optionen">Admin Options</a>
            </li>
            <li class="nav-item">
                <a class="nav-link Navlinks" href="/Admin/AdminIndex">Administration</a>
            </li>


        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-danger m-1">Logout</button>
            </form>
        </li>
    }
    else
    {
        //auskommentiert, weil kein User einen Account erstellen soll, die Webseiten sind Werbeseiten und dienen der Information und Kontaktaufnahme
        @*<li class="nav-item">
                <a class="btn btn-info m-1" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>*@
        <li class="nav-item">
            <a class="btn btn-success m-1" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
